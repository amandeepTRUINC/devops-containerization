version: "3.8"

services:
  nginx:
    image: nginx:latest
    container_name: kaminari-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - dev
      - staging
      - prod
    networks:
      - shared-db-net

  dev:
    container_name: kaminari-dev
    build:
      context: .
      args:
        APP_ENV: development
    env_file: .env.dev
    expose:
      - "3000"
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - shared-db-net

  staging:
    container_name: kaminari-staging
    build:
      context: .
      args:
        APP_ENV: staging
    env_file: .env.staging
    expose:
      - "3000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    environment:
      - NEXT_LOG_LEVEL=verbose
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - shared-db-net

  prod:
    container_name: kaminari-prod
    build:
      context: .
      args:
        APP_ENV: production
    env_file: .env.prod
    expose:
      - "3000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - shared-db-net

networks:
  shared-db-net:
    external: true
